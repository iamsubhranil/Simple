var a = 349, b = 3, c;
baddd = verybad / anotherbad;
if (a == b) { 
    bad = abad + anotherbad ;
}
else if (b == c) {
    notbad = a or b;
}
abad = bbad = cbad;
while a != b {
    bad = 1;
}
fn noarg(){
    something = athing + another_thing;
}
fn abc(abc, cde){
    badfunc = 2;
}
fn many_arg(arg1, arg2, arg3, arg4){
    arg1 = arg2 + arg3 / arg4;
}
obj HelloWorld{
    pub var a;
    priv var c;
    
    pub fn HelloWorld(arg1, arg2){
       a = arg1, b = arg2;
       athing.Constructor();
       someMethod().anotherMethod().b = 10;
    }

    proc fn doSomething(){
        set = 0;
        ret some;
    }
}
i = HelloWorld();
j = i.a.c.callSomething();
j.abc.def().ghi = done;

obj LinkedList{
    pub var front;

    fn amethod(){
        if somethingIsTrue() {
            doOtherThing();
        }
    }
}
